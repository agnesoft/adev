name: adev

on:
    push:
        branches: [main]

jobs:
    create_container:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - id: create_image
              uses: ./.github/actions/create_container
              with:
                  token: ${{ secrets.CONTAINER_REPOSITORY_TOKEN }}
        outputs:
            created: ${{ steps.create_image.outputs.created }}
            image: ${{ steps.create_image.outputs.image }}

    address_sanitizer:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build address-sanitizer
            - run: |
                  export ASAN_OPTIONS=alloc_dealloc_mismatch=0
                  ./build.sh test clang

    analysis_linux:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build clang
            - run: ./build.sh analyse

    analysis_windows:
        runs-on: windows-2022
        steps:
            - uses: actions/checkout@v2
            - shell: bash
              run: ./build.sh build clang
            - shell: bash
              run: ./build.sh analyse

    coverage_linux:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build coverage
            - run: ./build.sh coverage
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-${{ github.run_number }}-coverage-linux
                  path: build/coverage/
                  if-no-files-found: error

    coverage_windows:
        runs-on: windows-2022
        steps:
            - uses: actions/checkout@v2
            - shell: bash
              run: ./build.sh build coverage
            - shell: bash
              run: ./build.sh coverage
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-${{ github.run_number }}-coverage-windows
                  path: build/coverage/
                  if-no-files-found: error

    documentation:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build docs
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-${{ github.run_number }}-documentation
                  path: build/docs/
                  if-no-files-found: error

    formatting:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh format check

    linux_clang_x64:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build clang
            - run: ./build.sh test clang 100
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-${{ github.run_number }}-linux_clang_x64
                  path: build/clang/
                  if-no-files-found: error

    linux_gcc_x64:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        if: false
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build gcc
            - run: ./build.sh test gcc 100
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-${{ github.run_number }}-linux_gcc_x64
                  path: build/gcc/
                  if-no-files-found: error

    memory_sanitizer:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build memory-sanitizer
            - run: ./build.sh test clang

    thread_sanitizer:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build thread-sanitizer
            - run: ./build.sh test clang

    undefined_sanitizer:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: create_container
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh build undefined-sanitizer
            - run: ./build.sh test clang

    windows_clang_x64:
        runs-on: windows-2022
        steps:
            - uses: actions/checkout@v2
            - shell: bash
              run: ./build.sh build clang
            - shell: bash
              run: ./build.sh test clang 100
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-${{ github.run_number }}-windows_clang_x64
                  path: build/clang/
                  if-no-files-found: error

    windows_msvc_x64:
        runs-on: windows-2022
        steps:
            - uses: actions/checkout@v2
            - shell: bash
              run: ./build.sh build msvc
            - shell: bash
              run: ./build.sh test msvc 100
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-${{ github.run_number }}-windows_msvc_x64
                  path: build/msvc/
                  if-no-files-found: error
