name: pr

on:
    pull_request:
        branches: [main]

jobs:
    diff:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - id: diff
              shell: bash
              run: source sh/common.sh && if is_changed "*.cpp *.hpp **/*.sh containerfile"; then (echo "::set-output name=diff::true") fi
        outputs:
            diff: ${{ steps.diff.outputs.diff }}

    create_container:
        runs-on: ubuntu-latest
        needs: diff
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - id: create_image
              uses: ./.github/actions/create_container
              with:
                  token: ${{ secrets.CONTAINER_REPOSITORY_TOKEN }}
        outputs:
            created: ${{ steps.create_image.outputs.created }}
            image: ${{ steps.create_image.outputs.image }}

    build:
        strategy:
            matrix:
                configuration: ["release", "debug", "coverage", "address", "memory", "thread", "undefined"]
                toolchain: ["clang", "gcc", "msvc"]
                host: [ubuntu-latest, windows-latest]
                include:
                    - container:
                    - host: ubuntu-latest
                      os: linux
                      container: ${{ needs.create_container.outputs.image }}
                    - host: windows-latest
                      os: windows
                exclude:
                    - toolchain: gcc
                    - toolchain: msvc
                      host: ubuntu-latest
                    - toolchain: msvc
                      configuration: address
                    - toolchain: msvc
                      configuration: memory
                    - toolchain: msvc
                      configuration: thread
                    - toolchain: msvc
                      configuration: undefined
        name: build_${{ matrix.os }}_${{ matrix.toolchain }}_${{ matrix.configuration }}
        runs-on: ${{ matrix.host }}
        env:
            ASAN_OPTIONS: alloc_dealloc_mismatch=0
        container: ${{ matrix.container }}
        needs: [diff, create_container]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - shell: bash
              run: ./build.sh ${{ matrix.toolchain }} ${{ matrix.configuration }}
            - shell: bash
              run: ./build.sh test ${{ matrix.toolchain }} ${{ matrix.configuration }} 100
            - if: always() && ${{ matrix.configuration }} == 'coverage'
              uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-coverage-${{ matrix.os }}
                  path: build/${{ matrix.toolchain }}/${{ matrix.configuration }}/reports
                  if-no-files-found: error
            - if: ${{ matrix.configuration }} == 'release'
              uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-${{ matrix.os }}-${{ matrix.toolchain }}-${{ matrix.configuration }}
                  path: build/${{ matrix.toolchain }}/${{ matrix.configuration }}
                  if-no-files-found: error

    analyse:
        strategy:
            matrix:
                checks: ["bugprone", "cert", "cppcoreguidelines", "google", "misc", "modernize", "performance", "readability"]
                host: [ubuntu-latest, windows-latest]
                include:
                    - container:
                    - host: ubuntu-latest
                      os: linux
                      container: ${{ needs.create_container.outputs.image }}
                    - host: windows-latest
                      os: windows
        name: analyse_${{ matrix.os }}_${{ matrix.checks }}
        runs-on: ${{ matrix.host }}
        container: ${{ matrix.container }}
        needs: [diff, create_container]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - shell: bash
              run: ./build.sh clang release
            - shell: bash
              run: ./build.sh analyse diff ${{ matrix.checks }}

    documentation:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: [diff, create_container]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - run: ./build.sh docs
            - uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-documentation
                  path: build/docs/
                  if-no-files-found: error

    formatting:
        runs-on: ubuntu-latest
        container: ${{ needs.create_container.outputs.image }}
        needs: [diff, create_container]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - run: ./build.sh format check diff

    cleanup:
        runs-on: ubuntu-latest
        needs: [diff, create_container, analysis_linux, coverage_linux, documentation, formatting, linux_clang_x64, linux_gcc_x64]
        if: false && always() && needs.create_container.outputs.created == 'true'
        steps:
            - uses: actions/checkout@v2
            - id: create_image
              uses: ./.github/actions/delete_container
              with:
                  image: ${{ needs.create_container.outputs.image }}
                  token: ${{ secrets.CONTAINER_REPOSITORY_TOKEN }}
