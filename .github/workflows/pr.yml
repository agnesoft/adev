name: pr

on:
    pull_request:
        branches: [main]

jobs:
    diff:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - id: diff
              shell: bash
              run: source sh/common.sh && if is_changed "*.cpp *.hpp **/*.sh containerfile"; then (echo "::set-output name=diff::true") fi
        outputs:
            diff: ${{ steps.diff.outputs.diff }}

    docker:
        runs-on: ubuntu-latest
        needs: diff
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - id: create_image
              uses: ./.github/actions/create_container
        outputs:
            image: ${{ steps.create_image.outputs.image }}
            created: ${{ steps.create_image.outputs.created }}}

    address_sanitizer:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - run: ./adev.sh build address-sanitizer
            - run: ./adev.sh test clang

    analysis_linux:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - run: ./adev.sh build clang
            - run: ./adev.sh analyse diff

    analysis_windows:
        runs-on: windows-2022
        needs: [diff]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - shell: bash
              run: ./adev.sh build clang
            - shell: bash
              run: ./adev.sh analyse diff

    coverage_linux:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - run: ./adev.sh build coverage
            - run: ./adev.sh coverage
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-coverage-linux
                  path: build/coverage/
                  if-no-files-found: error

    coverage_windows:
        runs-on: windows-2022
        needs: [diff]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - shell: bash
              run: ./adev.sh build coverage
            - shell: bash
              run: ./adev.sh coverage
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-coverage-windows
                  path: build/coverage/
                  if-no-files-found: error

    documentation:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - run: ./adev.sh build docs
            - uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-documentation
                  path: build/docs/
                  if-no-files-found: error

    formatting:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
              with:
                  fetch-depth: 0
            - run: ./adev.sh format check diff

    linux_clang_x64:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - run: ./adev.sh build clang
            - run: ./adev.sh test clang 100
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-linux_clang_x64
                  path: build/clang/
                  if-no-files-found: error

    linux_gcc_x64:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: false
        steps:
            - uses: actions/checkout@v2
            - run: ./adev.sh build gcc
            - run: ./adev.sh test gcc 100
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-linux_gcc_x64
                  path: build/gcc/
                  if-no-files-found: error

    memory_sanitizer:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - run: ./adev.sh build memory-sanitizer
            - run: ./adev.sh test clang

    thread_sanitizer:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - run: ./adev.sh build thread-sanitizer
            - run: ./adev.sh test clang

    undefined_sanitizer:
        runs-on: ubuntu-latest
        container: ${{ needs.docker.outputs.image }}
        needs: [diff, docker]
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - run: ./adev.sh build undefined-sanitizer
            - run: ./adev.sh test clang

    windows_clang_x64:
        runs-on: windows-2022
        needs: diff
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - shell: bash
              run: ./adev.sh build clang
            - shell: bash
              run: ./adev.sh test clang 100
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-windows_clang_x64
                  path: build/clang/
                  if-no-files-found: error

    windows_msvc_x64:
        runs-on: windows-2022
        needs: diff
        if: needs.diff.outputs.diff == 'true'
        steps:
            - uses: actions/checkout@v2
            - shell: bash
              run: ./adev.sh build msvc
            - shell: bash
              run: ./adev.sh test msvc 100
            - if: always()
              uses: actions/upload-artifact@v2
              with:
                  name: adev-pr-${{ github.run_number }}-windows_msvc_x64
                  path: build/msvc/
                  if-no-files-found: error

    cleanup:
        runs-on: ubuntu-latest
        needs: [diff, docker, analysis_linux, coverage_linux, documentation, formatting, linux_clang_x64, linux_gcc_x64]
        if: always() && ${{ needs.docker.outputs.created }}
        steps:
            - uses: actions/checkout@v2
            - id: create_image
              uses: ./.github/actions/delete_container
              with:
                  image: ${{ needs.docker.outputs.image }}
